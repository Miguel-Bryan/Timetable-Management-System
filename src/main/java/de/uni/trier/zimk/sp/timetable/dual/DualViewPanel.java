/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.uni.trier.zimk.sp.timetable.dual;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
import de.uni.trier.zimk.sp.timetable.DayShiftTimetableTableModel;
import de.uni.trier.zimk.sp.timetable.preferences.*;
import de.uni.trier.zimk.sp.timetable.ShiftPreferencesCellRenderer;
import de.uni.trier.zimk.sp.timetable.oo.*;
import de.uni.trier.zimk.sp.timetable.preferences.UsersAndPreferencesModel;
import de.uni.trier.zimk.sp.timetable.preferences.EditableDayShiftTimetableTableModel;
import de.uni.trier.zimk.sp.timetable.util.TimeTableListener;
import de.uni.trier.zimk.sp.timetable.util.Timetable;
import java.awt.Point;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Landry Ngani
 */
public class DualViewPanel extends javax.swing.JPanel implements TimeTableListener  {

    private Timetable timetable;

    public DualViewPanel(Timetable timetable, UsersAndPreferencesModel model, EditableDayShiftTimetableTableModel dayShiftTimetableTableModel, DayShiftTimetableTableModel tableModel) {
        
        this.timetable = timetable;
        this.model = model;
        this.editablePreferencesTableModel = dayShiftTimetableTableModel;
        this.shiftTableModel = tableModel;
        
        initComponents();
        timetable.registerTimeTableListener(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        workerList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        displayAllButton = new javax.swing.JButton();
        displayAllButton1 = new javax.swing.JButton();
        tablesPanel = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        prefPanel = new DualPreferencesViewPanel(model, editablePreferencesTableModel);
        shiftPanel = new DualShiftViewPanel(shiftTableModel);
        statusPanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(100, 103));

        jPanel1.setLayout(new java.awt.BorderLayout());

        workerList.setModel(new javax.swing.AbstractListModel() {
            List<Worker> workers = model.getWorkers();
            public int getSize() { return workers.size(); }
            public Object getElementAt(int i) { return workers.get(i); }
        });
        jScrollPane2.setViewportView(workerList);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel3.add(addButton);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        jPanel3.add(removeButton);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        displayAllButton.setText("Load...");
        displayAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllButtonActionPerformed(evt);
            }
        });
        jPanel4.add(displayAllButton);

        displayAllButton1.setText("Save");
        displayAllButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(displayAllButton1);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setLeftComponent(jPanel1);

        tablesPanel.setLayout(new java.awt.BorderLayout());

        jSplitPane2.setDividerLocation(getSplitPanePosition());
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setToolTipText("");
        jSplitPane2.setLeftComponent(prefPanel);
        jSplitPane2.setRightComponent(shiftPanel);

        tablesPanel.add(jSplitPane2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(tablesPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);

        statusPanel.setLayout(new java.awt.BorderLayout(10, 10));

        statusLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/modified_icon.png"))); // NOI18N
        statusLabel.setText("  ");
        statusPanel.add(statusLabel, java.awt.BorderLayout.CENTER);

        add(statusPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeButtonActionPerformed

    private void displayAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllButtonActionPerformed
        timetable.loadState();
    }//GEN-LAST:event_displayAllButtonActionPerformed

    private void displayAllButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllButton1ActionPerformed

        timetable.saveState();

    }//GEN-LAST:event_displayAllButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton displayAllButton;
    private javax.swing.JButton displayAllButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JPanel prefPanel;
    private javax.swing.JButton removeButton;
    private javax.swing.JPanel shiftPanel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JPanel tablesPanel;
    private javax.swing.JList workerList;
    // End of variables declaration//GEN-END:variables

    private EditableDayShiftTimetableTableModel editablePreferencesTableModel;
    private DayShiftTimetableTableModel shiftTableModel;
    private UsersAndPreferencesModel model;
    
    
    private int getSplitPanePosition(){
        return (int)(tablesPanel.getHeight()*0.6);
    }

    public void messageToDisplay(String message) {
    }

    public void infoToDisplay(String message) {
    }
    
    public void statusToDisplay(String message) {
        this.statusLabel.setText(message);
    }

    public void permutationExecuted(String resumee) {
    }

    public void stateToDisplay(TimetableState state) {
        editablePreferencesTableModel.setValueList(state);
        shiftTableModel.setValueList(state);
    }

    public void endStateReached(TimetableState state) {
    }

    public void workerLoggedIn(Worker worker) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    
    
    
    
}
