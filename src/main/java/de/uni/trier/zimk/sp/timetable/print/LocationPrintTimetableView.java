/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.uni.trier.zimk.sp.timetable.print;

import de.uni.trier.zimk.sp.timetable.oo.*;
import de.uni.trier.zimk.sp.timetable.util.Timetable;
import java.awt.Color;
import java.awt.Font;
import java.awt.Point;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Landry Ngani
 */
public class LocationPrintTimetableView extends javax.swing.JPanel {


    public LocationPrintTimetableView(OrganisationalConfiguration configuration, Timetable timetable, LocationPrintTableModel locationPrintTableModel) {
        this.configuration = configuration;
        this.timetable = timetable;
        this.locationPrintTableModel =  locationPrintTableModel;
        
        initComponents();
        
        descriptionTextField.setText( locationPrintTableModel.getValueList().getName() + " [ "+ new Date(configuration.getValidityStart())
                + " ==> "+ new Date(configuration.getValidityEnd()) +" ]" );
        descriptionTextField.setFont( new Font("Arial", Font.PLAIN, 18) );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workerTable = new javax.swing.JTable();
        descriptionTextField = new javax.swing.JTextField();
        legendPanel = new javax.swing.JPanel();
        remarkTextField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        workerTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        workerTable.setModel(locationPrintTableModel);
        workerTable.setRowHeight(60);
        workerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workerTable);
        for(int i = 0; i<locationPrintTableModel.getColumnCount(); i++ ){
            workerTable.getColumnModel().getColumn(i).setCellRenderer(
                new de.uni.trier.zimk.sp.timetable.print.LocationShiftWorkerPrintCellRenderer(timetable) );

        }

        // Show only vertical grid lines
        workerTable.setShowGrid(false);
        workerTable.setShowVerticalLines(true);

        // Set the grid color
        workerTable.setGridColor(Color.BLACK);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        descriptionTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        descriptionTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        descriptionTextField.setMinimumSize(new java.awt.Dimension(200, 25));
        add(descriptionTextField, java.awt.BorderLayout.PAGE_START);

        legendPanel.setBackground(new java.awt.Color(255, 255, 255));
        legendPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Anmerkungen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 0, 12))); // NOI18N
        legendPanel.setMaximumSize(new java.awt.Dimension(1920, 100));
        legendPanel.setMinimumSize(new java.awt.Dimension(100, 40));
        legendPanel.setPreferredSize(new java.awt.Dimension(100, 40));
        legendPanel.setLayout(new java.awt.BorderLayout());

        remarkTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        remarkTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remarkTextFieldActionPerformed(evt);
            }
        });
        legendPanel.add(remarkTextField, java.awt.BorderLayout.CENTER);

        add(legendPanel, java.awt.BorderLayout.PAGE_END);
        legendPanel.getAccessibleContext().setAccessibleName("anmerkungen");
    }// </editor-fold>//GEN-END:initComponents

    private void workerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workerTableMouseClicked
        if( evt.isControlDown() ){
            
            Point p = evt.getPoint();
            int row = workerTable.rowAtPoint(p); 
            int column = workerTable.columnAtPoint(p); 
            
            LocationPrintTableModel tableModel = (LocationPrintTableModel) ((JTable)evt.getComponent()).getModel();
            LocationShift shift = (LocationShift)tableModel.getValueAt(row, column);
            
            if( shift != null ){
                
                //List<Worker> volunteers = new WorkerDialog( timetable, shift).getSelectedWorkers();
                //Collections.sort(volunteers, new WorkerComparable());
                try {
                    int capacity = Integer.parseInt( 
                            JOptionPane.showInputDialog(this, "Enter the shift's capacity please :" , "Timetable.", JOptionPane.QUESTION_MESSAGE) 
                            );
                    shift.setCapacity( capacity );
                }
                catch(NumberFormatException e){
                    e.printStackTrace( System.out );
                }
                
                timetable.fireStateChanged();
                
            }
        }
    }//GEN-LAST:event_workerTableMouseClicked

    private void remarkTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remarkTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remarkTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel legendPanel;
    private javax.swing.JTextField remarkTextField;
    private javax.swing.JTable workerTable;
    // End of variables declaration//GEN-END:variables


    private OrganisationalConfiguration configuration;
    private Timetable timetable;
    private  LocationPrintTableModel locationPrintTableModel;
    
    
    public void setTableModel( LocationPrintTableModel configurationTableModel) {
        this.locationPrintTableModel = configurationTableModel;
        workerTable.setModel(configurationTableModel);
    }

    public LocationPrintTableModel getLocationAwarePrintTableModel() {
        return locationPrintTableModel;
    }

      /**
     * 
     * @param state 
     */
    public void stateToDisplay(TimetableState state){
       
        for(Location loc : state.getLocations()){
            if(loc.equals(locationPrintTableModel.getValueList())){
                locationPrintTableModel.setValueList(loc);
                break;
            }
        }
        
        this.repaint();
    }
    
    
}
